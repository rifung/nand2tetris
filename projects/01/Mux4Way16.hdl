// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    Not(in=sel[1], out=notSel1);

    Mux16(a=a, b=b, sel=sel[0], out=unfilteredABMux);
    Mux16(a=c, b=d, sel=sel[0], out=unfilteredCDMux);

    And16(a=unfilteredABMux,
          b[0]=notSel1,
          b[1]=notSel1,
          b[2]=notSel1,
          b[3]=notSel1,
          b[4]=notSel1,
          b[5]=notSel1,
          b[6]=notSel1,
          b[7]=notSel1,
          b[8]=notSel1,
          b[9]=notSel1,
          b[10]=notSel1,
          b[11]=notSel1,
          b[12]=notSel1,
          b[13]=notSel1,
          b[14]=notSel1,
          b[15]=notSel1,
          out=filteredABMux);
    And16(a=unfilteredCDMux,
          b[0]=sel[1],
          b[1]=sel[1],
          b[2]=sel[1],
          b[3]=sel[1],
          b[4]=sel[1],
          b[5]=sel[1],
          b[6]=sel[1],
          b[7]=sel[1],
          b[8]=sel[1],
          b[9]=sel[1],
          b[10]=sel[1],
          b[11]=sel[1],
          b[12]=sel[1],
          b[13]=sel[1],
          b[14]=sel[1],
          b[15]=sel[1],
          out=filteredCDMux);

    Or16(a=filteredABMux, b=filteredCDMux, out=out);
}
